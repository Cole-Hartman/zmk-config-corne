/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESCAPE  &kp Q  &kp W  &kp E    &kp R  &kp T      &kp Y      &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp LCTRL   &kp A  &kp S  &kp D    &kp F  &kp G      &kp H      &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT   &kp Z  &kp X  &kp C    &kp V  &kp B      &kp N      &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp RIGHT_SHIFT
                          &kp TAB  &mo 1  &kp RET    &kp SPACE  &mo 2  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESCAPE  &kp N1  &kp N2  &kp N3   &kp N4  &kp N5       &kp N6     &kp N7    &kp N8    &kp N9     &kp N0   &kp BSPC
&none       &none   &none   &none    &none   &none        &kp LEFT   &kp DOWN  &kp UP    &kp RIGHT  &none    &none
&kp LSHFT   &none   &none   &none    &none   &none        &none      &none     &none     &none      &kp DOT  &none
                            &kp TAB  &trans  &kp ENTER    &kp SPACE  &mo 3     &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESCAPE  &kp EXCL  &kp AT  &kp HASH   &kp DLLR   &kp PRCNT    &kp CARET  &kp AMPS              &kp ASTRK              &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp BSPC
&kp LCTRL   &none     &none   &kp EQUAL  &kp TILDE  &none        &kp MINUS  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp BACKSLASH     &kp UNDERSCORE     &kp GRAVE
&kp LSHFT   &none     &none   &none      &none      &none        &kp PLUS   &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp PIPE          &none              &kp RIGHT_SHIFT
                              &kp TAB    &mo 3      &kp ENTER    &kp SPACE  &trans                &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&kp K_SLEEP     &kp C_SLEEP   &kp C_SLEEP_MODE  &none         &none         &none           &none  &kp C_BRIGHTNESS_DEC  &none             &kp C_BRIGHTNESS_INC  &none  &none
&bt BT_CLR      &bt BT_SEL 0  &bt BT_SEL 1      &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &none  &kp K_VOLUME_DOWN     &kp K_MUTE        &kp K_VOLUME_UP       &none  &none
&bt BT_CLR_ALL  &none         &none             &none         &none         &none           &none  &kp K_BACK            &kp K_PLAY_PAUSE  &kp K_NEXT            &none  &none
                                                &none         &none         &none           &none  &none                 &none
            >;
        };
    };
};
